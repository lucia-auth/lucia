---
import { getPages } from "@utils/content";

import MarkdownStyle from "@components/MarkdownStyle.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import SelectLink from "@components/SelectLink.astro";
import Header from "@components/Header.astro";

import type { InferGetStaticPropsType } from "astro";

export const getStaticPaths = async () => {
    const pages = await getPages("guidebook");
    return await Promise.all(
        pages.map(async (page) => {
            const nestedPages = await getPages(...page.pathname.split("/"));
            return {
                params: {
                    guidebook_page: page.pathnameSegments.slice(1).join("/")
                },
                props: {
                    page,
                    nestedPages
                }
            };
        })
    );
};

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page, nestedPages } = Astro.props;
---

<BaseLayout title={page.title} description={page.description}>
    <Header />
    <main class="mt-24 lg:mt-20 pb-20 px-4 sm:px-8 md:px-16 overflow-hidden">
        <div class="mx-auto max-w-4xl w-full">
            <div class="mt-6 mb-8">
                {
                    nestedPages.length > 0 && (
                        <SelectLink
                            title="Select framework"
                            options={nestedPages.map((nestedPage) => {
                                return {
                                    title: nestedPage.htmlMenuTitle,
                                    href: `/${nestedPage.pathname}`
                                };
                            })}
                        />
                    )
                }
                <h1 class="text-5xl font-bold" set:html={page.htmlTitle}></h1>
            </div>
            {
                nestedPages.length > 0 && (
                    <p class="mb-4 text-sm text-zinc-400">
                        <i>
                            Guides for specific frameworks and runtimes are also
                            available.
                        </i>
                    </p>
                )
            }
            <MarkdownStyle>
                <page.Content />
            </MarkdownStyle>
        </div>
    </main>
</BaseLayout>
