---
import { getPages } from "@utils/content";

import MarkdownStyle from "@components/MarkdownStyle.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import SelectLink from "@components/SelectLink.astro";
import Header from "@components/Header.astro";

import type { InferGetStaticPropsType } from "astro";

export const getStaticPaths = async () => {
	const pages = await getPages("guidebook");
	return pages.map((page) => {
		return {
			params: {
				guidebook: page.href.replace("/guidebook/", "")
			},
			props: {
				page
			}
		};
	});
};

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page } = Astro.props;
---

<BaseLayout title={page.title} description={page.description}>
	<Header />
	<main class="mt-24 overflow-hidden px-6 pb-20 sm:px-8 md:px-16 lg:mt-20">
		<div class="mx-auto w-full max-w-4xl">
			<div class="mb-8 mt-6">
				{
					page.versions.length > 0 && (
						<SelectLink
							title="Select framework"
							options={page.versions.map((version) => {
								return {
									htmlTitle: version.name,
									href: version.href
								};
							})}
						/>
					)
				}
				<h1
					class="mt-1 break-words text-4xl font-semibold"
					set:html={page.htmlTitle}
				/>
			</div>
			{
				page.versions.length > 0 && (
					<p class="mb-8 text-sm text-zinc-400">
						<i>
							Framework and runtime specific versions of this guide are also
							available.
						</i>
					</p>
				)
			}
			<MarkdownStyle>
				<page.Content />
			</MarkdownStyle>
		</div>
	</main>
</BaseLayout>
