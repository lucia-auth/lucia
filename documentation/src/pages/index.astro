---
import Layout from "@components/Layout.astro";
import ContentTable from "@components/ContentTable.astro";
import Header from "@components/ContentHeader.astro";

// generated on build/dev start
import contributors from "../../.github.json";
import { getCollection } from "@cela/content";
import Banner from "@components/Banner.astro";
import { handleRequest } from "@server/request";

const request = handleRequest(Astro)
const frameworkId = request.getFrameworkId();

const collection = await getCollection("main", frameworkId);
if (!collection) {
	return new Response(null, {
		status: 404
	});
}
---

<Layout
	meta={{
		title: null,
		description: null
	}}
	content={{ collectionId: collection.id, frameworkId }}
>
	<Header />
	<ContentTable frameworkId={frameworkId} />
	<main
		class="min-h-screen overflow-hidden bg-white dark:bg-zinc-900 dark:text-zinc-200 xl:ml-80"
	>
		<div class="px-4 pt-36 sm:px-8 sm:pt-48 md:px-24 md:pt-36 lg:pt-48">
			<h1 class="xs:text-6xl break-words text-4xl font-semibold sm:text-7xl">
				Authentication, <br />simple and clean
			</h1>
			<p class="mb-4 mt-6">
				Lucia is a simple and flexible user and session management library that
				provides an abstraction layer between your app and your database. It's
				bare-bones by design, keeping everything easy to use and understand.
			</p>
			<a
				href="/start-here/introduction"
				class="bg-shadow-zinc dark:text-shadow-zinc hover:text-main dark:hover:text-main hover:border-main dark:hover:border-main border-shadow-zinc my-2 block w-fit rounded-md border px-10 py-2 font-medium text-white transition hover:bg-transparent dark:border-white dark:bg-white dark:hover:bg-transparent"
				>Get started</a
			>
			<section class="my-12">
				<p class="my-4">
					This is a free and open source project made possible by our
					contributors! Thank you to everyone who has helped with the
					development!
				</p>
				<div class="mt-2 flex w-full flex-wrap gap-2 pb-1">
					{
						contributors.map((val) => (
							<a
								href={val.profile}
								target="_blank"
								aria-label={`${val.username} Github profile`}
							>
								<img
									src={val.avatar}
									height="128"
									width="128"
									class="dark:border-shadow-zinc hover:border-main dark:hover:border-main h-8 w-8 rounded-full border bg-zinc-100 object-fill transition duration-100 hover:scale-110"
									alt={val.username}
									loading="lazy"
								/>
							</a>
						))
					}
				</div>
			</section>
		</div>
	</main>
	<Banner />
	<script>
		import { setCookie } from "@utils/cookie";
		import { addClassName } from "@utils/dom";

		const bannerCloseButton = document.getElementById("banner-close-button");
		const bannerDiv = document.getElementById("banner");
		if (bannerCloseButton && bannerDiv) {
			bannerCloseButton.addEventListener("click", () => {
				setCookie("banner-hidden", "true");
				addClassName(bannerDiv, "hidden");
			});
		}
	</script>
</Layout>

<style>
	:global(.astro-code) {
		@apply my-2 overflow-scroll rounded-md px-4 py-2 text-sm;
		scrollbar-width: none;
	}
	:global(.dark .astro-code) {
		@apply !bg-zinc-900;
	}
</style>
