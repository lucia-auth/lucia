---
import ContentTable from "@components/doc/content-table";
import DocumentLayout from "@layouts/DocumentLayout.astro";

import type { GetStaticPaths } from "astro";
import { db } from "@lib/db";
import type { GetPropsFromGetStaticPaths } from "@lib/astro";

export const getStaticPaths: GetStaticPaths = (async () => {
	const integrationCollection = await db.collection("integration").get();
	const documents = integrationCollection._getAllDocuments();
	return documents.map((doc) => {
		const pathSegements = doc._path.split("/"); // ["integration", "astro", "start-here", "getting-started"]
		const collection = integrationCollection._collections.find(
			(col) => col._id === pathSegements[1]
		);
		if (!collection) throw new Error();
		return {
			params: {
				integration: pathSegements.slice(1).join("/")
			},
			props: {
				doc,
				collection
			}
		};
	});
}) satisfies GetStaticPaths;

type Props = GetPropsFromGetStaticPaths<typeof getStaticPaths>;

const { doc, collection } = Astro.props;
---

<DocumentLayout doc={doc}>
	<ContentTable
		client:load
		collections={[collection]}
		title={`${collection.title} integration`}
		currentPath={Astro.url.pathname}
		slot="table"
	/>
	<doc._Content slot="content" />
</DocumentLayout>
