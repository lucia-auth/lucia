---
import { getPages } from "@utils/content";

import ReferenceLayout from "@layouts/ReferenceLayout.astro";
import MarkdownStyle from "@components/MarkdownStyle.astro";
import SelectLink from "@components/SelectLink.astro";

import type { InferGetStaticPropsType } from "astro";

export const getStaticPaths = async () => {
	const pages = await getPages("reference");
	return pages.map((page) => {
		const slug =
			page.href === "/reference"
				? undefined
				: page.href.replace("/reference/", "");
		return {
			params: {
				slug
			},
			props: {
				page
			}
		};
	});
};

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page } = Astro.props;
---

<ReferenceLayout title={page.title} description={page.description}>
	<div class="mb-8 mt-6">
		{
			page.versions.length > 0 && (
				<SelectLink
					title="Select framework"
					options={page.versions.map((version) => {
						return {
							htmlTitle: version.name,
							href: version.href
						};
					})}
				/>
			)
		}
		<h1
			class="mt-1 break-words text-4xl font-semibold"
			set:html={page.htmlTitle}
		/>
	</div>
	{
		page.versions.length > 0 && (
			<p class="mb-8 text-sm text-zinc-400">
				<i>
					Framework and runtime specific versions of this guide are also
					available.
				</i>
			</p>
		)
	}
	<MarkdownStyle>
		<page.Content />
	</MarkdownStyle>
</ReferenceLayout>

<style>
	h1 code {
		@apply text-red-400;
	}
</style>
