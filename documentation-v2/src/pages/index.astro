---
import BaseLayout from "@layouts/BaseLayout.astro";
import MainLayout from "../layouts/MainLayout.astro";
import Code from "@components/Code.astro";
import Header from "@components/Header.astro";
import Menu from "@components/Menu.astro";

import { getSubCollections } from "@utils/content";

const subCollections = await getSubCollections("main");

const code1 = `CREATE TABLE user (
	id TEXT NOT NULL PRIMARY KEY,
	username TEXT NOT NULL UNIQUE,
);

CREATE TABLE user_key (
    id TEXT NOT NULL PRIMARY KEY,
    user_id TEXT NOT NULL REFERENCES user(id),
    hashed_password TEXT
);

CREATE TABLE user_session (
    id TEXT NOT NULL PRIMARY KEY,
    user_id TEXT NOT NULL REFERENCES user(id),
    active_expires INTEGER NOT NULL,
    idle_expires INTEGER NOT NULL
);`;

const code2 = `import { lucia } from "lucia";
import { express } from "lucia/middleware";
import { betterSqlite3 } from "@lucia-auth/adapter-sqlite";

export const auth = lucia({
	adapter: betterSqlite3(),
	middleware: express(),
	env: "DEV"
});
`;

const code3 = `import { auth } from "./auth.js";

const user = await auth.createUser({
	// user identified with their username
	key: {
		providerId: "username",
		providerUserId: username,
		password
	},
	attributes: {
		username
	}
});
const session = await auth.createSession({
	userId: user.userId,
	attributes: {}
});
const sessionCookie = auth.createSessionCookie(session);`;

const contributorsResponse = await fetch(
	"https://api.github.com/repos/pilcrowonpaper/lucia/contributors?per_page=100",
	{
		headers: {
			Authorization: `Bearer ${import.meta.env.GITHUB_API_KEY}`
		}
	}
);

if (!contributorsResponse.ok) {
	throw new Error("Failed to fetch data from Github");
}

const contributorsResult = (await contributorsResponse.json()) as {
	avatar_url: string;
	html_url: string;
	login: string;
}[];

const contributors = contributorsResult.map((val) => {
	const url = new URL(val.avatar_url);
	url.searchParams.set("s", "128"); // set image size to 128 x 128
	url.searchParams.delete("v");
	return {
		avatar: url.href,
		profileLink: val.html_url,
		username: val.login
	};
});
---

<BaseLayout
	title="Lucia"
	description="Lucia is a simple and flexible auth library for TypeScript"
>
	<Header />
	<Menu subCollections={subCollections} collectionId="main" />
	<main class="mt-24 lg:mt-20 lg:ml-72 overflow-hidden">
		<div class="mx-auto w-fit max-w-4xl py-16 px-4 sm:px-8 md:px-16">
			<img
				src="/logo.svg"
				alt="Lucia logo"
				width="100"
				height="100"
				class="h-16 w-16 mx-auto"
			/>
			<p class="text-5xl font-semibold text-center mt-4 mx-auto w-fit">
				Authentication, simple and clean.
			</p>

			<p class="mx-auto text-lg w-fit text-center mt-8">
				<span>Lucia</span> is an auth library for TypeScript that abstracts away
				the complexity of handling users and sessions. It works alongside your database
				to provide an API that's easy to use, understand, and extend.
			</p>
			<a
				class="mx-auto text-main hover:underline block w-fit mt-2"
				href="/start-here/getting-started">Get started</a
			>
		</div>
		<div class="mt-12 bg-main-pastel px-4 sm:px-8 md:px-16 py-12">
			<h2 class="text-3xl font-semibold mx-auto text-center mb-2">
				Motivation
			</h2>
			<p class="text-center max-w-2xl mx-auto">
				Auth providers are expensive and rarely flexible. Libraries like Auth.js
				is too bloated and opinionated. Building your own from scratch is hard
				and full of footguns. What if you can implement your own auth without
				worrying about the small details?
			</p>
		</div>
		<div class="pt-12 pb-8 px-4 sm:px-8 md:px-16 bg-zinc-80">
			<h2 class="text-3xl font-semibold mx-auto text-center mb-2">
				It just works
			</h2>
			<p class="mb-12 text-center max-w-2xl mx-auto">
				Forget endless configuration and callbacks - just write code.
			</p>
			<div
				class="flex flex-col-reverse xl:flex-row gap-y-8 xl:gap-x-8 mb-8 rounded-lg bg-white py-6 px-8"
			>
				<div class="grow">
					<Code code={code1} lang="sql" />
				</div>
				<div class="w-full xl:w-72 1.5xl:w-96">
					<h3 class="text-xl font-semibold mb-4">1. Set up your database</h3>
					<p>
						Create 3 basic, minimum tables for Lucia. You can add columns to the
						user table to store custom attributes.
					</p>
				</div>
			</div>
			<div
				class="flex flex-col-reverse xl:flex-row gap-y-8 gap-x-8 mb-8 rounded-lg bg-white py-6 px-8"
			>
				<div class="grow">
					<Code code={code2} lang="ts" />
				</div>
				<div class="w-full xl:w-72 1.5xl:w-96">
					<h3 class="text-xl font-semibold mb-4">2. Initialize Lucia</h3>
					<p>
						Initialize Lucia using one of the many provided database adapters.
						Use middleware to use Lucia with your framework or runtime of
						choice.
					</p>
				</div>
			</div>
			<div
				class="flex flex-col-reverse xl:flex-row gap-y-8 gap-x-8 mb-8 rounded-lg bg-white py-6 px-8"
			>
				<div class="grow">
					<Code code={code3} lang="ts" />
				</div>
				<div class="w-full xl:w-72 1.5xl:w-96">
					<h3 class="text-xl font-semibold mb-4">3. Start building</h3>
				</div>
			</div>
		</div>
		<div class="pt-12 pb-8 px-4 sm:px-8 md:px-16 bg-red-200">
			<h2 class="text-3xl font-semibold mx-auto text-center mb-2">
				Free and open source
			</h2>
			<p class="mb-8 text-center max-w-2xl mx-auto">
				Lucia is a free and open source project made possible by our
				contributors! Thank you to everyone who has helped with the development!
			</p>
			<div class="flex w-full flex-wrap gap-2 pb-1 place-content-center">
				{
					contributors.map((contributor) => {
						return (
							<a
								href={contributor.profileLink}
								target="_blank"
								aria-label={`${contributor.username} Github profile`}
							>
								<img
									src={contributor.avatar}
									height="128"
									width="128"
									class="h-8 w-8 rounded-full bg-red-300 object-fill transition duration-100 hover:scale-110"
									alt={contributor.username}
									loading="lazy"
								/>
							</a>
						);
					})
				}
			</div>
		</div>
		<div class="pt-12 pb-16">
			<p class="text-center">Pro tip: Lucia is pronounced <i>Loo-shya</i></p>
			<p class="text-center mt-4 text-sm">
				Created by <a
					class="text-main hover:underline"
					href="https://pilcrow.vercel.app">pilcrow</a
				>
			</p>
		</div>
	</main>
</BaseLayout>
