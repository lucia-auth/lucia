---
import { auth, passwordResetToken } from "@auth/lucia";
import { isValidFormSubmission } from "src/forms/submission";

import MainLayout from "src/layouts/MainLayout.astro";

let errorMessage = "";

const handleFormSubmission = async (): Promise<Response | null> => {
	const validSubmission = isValidFormSubmission(Astro.request);
	if (!validSubmission) return null;
	const formData = await Astro.request.formData();
	const password = formData.get("new-password");
	if (password instanceof File || password === null || password.length < 8) {
		errorMessage = "Invalid password";
		return null;
	}
	try {
		const token = await passwordResetToken.validate(Astro.params.token ?? "");
		let user = await auth.getUser(token.userId);
		if (!user.emailVerified) {
			user = await auth.updateUserAttributes(user.userId, {
				email_verified: true
			});
		}
		await auth.invalidateAllUserSessions(user.userId);
		await auth.updateKeyPassword("email", user.email, password);
		const session = await auth.createSession(user.userId);
		const authRequest = auth.handleRequest(Astro);
		authRequest.setSession(session);
		return Astro.redirect("/", 302);
	} catch (e) {
		console.log(e);
		errorMessage = "An unknown error occurred";
		return null;
	}
};

const response = await handleFormSubmission();
if (response) return response;
---

<MainLayout>
	<h1>Reset password</h1>
	<form method="post">
		<label for="new-password">New password</label>
		<p>Password must be at least 8 characters long</p>
		<input id="new-password" name="new-password" />
		<input type="submit" value="Reset password" />
	</form>
	{errorMessage && <p class="error">{errorMessage}</p>}
</MainLayout>
