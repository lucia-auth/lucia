---
interface Props {
	sections: Section[];
}

export interface Section {
	title: string;
	pages: Page[];
}

export type Page = [title: string, href: string];

function isSelected(href: string, currentPathname: string): boolean {
	if (removeLeadingSlash(href) === removeLeadingSlash(currentPathname)) {
		return true;
	}
	return currentPathname.startsWith(removeLeadingSlash(href) + "/");
}

function removeLeadingSlash(s: string): string {
	if (s.endsWith("/")) {
		return s.split("/").slice(0, -1).join("/");
	}
	return s;
}
---

<ul class="text-sm">
	{
		Astro.props.sections.map((section) => {
            if (section.pages.length < 1) {
                return null
            }
			return (
				<li class="mt-6">
					<p class="mb-1 text-sm font-medium">{section.title}</p>
					<ul>
						{section.pages.map((page) => {
							return (
								<li class="my-1">
									<a
										class:list={[
											"hover:underline",
											{
												"text-zinc-600": !isSelected(page[1], Astro.url.pathname),
												"text-main": isSelected(page[1], Astro.url.pathname)
											}
										]}
										href={page[1]}
									>
										{page[0]}
									</a>
								</li>
							);
						})}
					</ul>
				</li>
			);
		})
	}
</ul>
