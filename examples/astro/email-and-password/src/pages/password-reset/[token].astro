---
import "../../app.css";

import { auth } from "../../lib/lucia";
import { validatePasswordResetToken } from "../../lib/token";

let errorMessage = "";
if (Astro.request.method === "POST") {
	const formData = await Astro.request.formData();
	const password = formData.get("password");
	// basic check
	const validPassword =
		typeof password === "string" &&
		password.length >= 6 &&
		password.length <= 255;
	if (validPassword) {
		try {
			const { token } = Astro.params;
			if (!token) {
				return new Response(null, {
					status: 404
				});
			}
			const userId = await validatePasswordResetToken(token);
			let user = await auth.getUser(userId);
			await auth.invalidateAllUserSessions(user.userId);
			await auth.updateKeyPassword("email", user.email, password);
			if (!user.emailVerified) {
				user = await auth.updateUserAttributes(user.userId, {
					email_verified: Number(true)
				});
			}
			const session = await auth.createSession({
				userId: user.userId,
				attributes: {}
			});
			Astro.locals.auth.setSession(session);
			return Astro.redirect("/");
		} catch (e) {
			errorMessage = "Invalid or expired password reset link";
			Astro.response.status = 400;
		}
	} else {
		errorMessage = "Invalid password";
		Astro.response.status = 400;
	}
}
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Email & password auth with Lucia</title>
	</head>
	<body>
		<h1>Reset password</h1>
		<form method="post">
			<label for="password">New Password</label>
			<input name="password" id="password" /><br />
			<input type="submit" />
		</form>
		<p class="error">{errorMessage}</p>
	</body>
</html>
