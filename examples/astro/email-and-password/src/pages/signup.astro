---
import "../app.css";
import { isValidEmail, sendEmailVerificationLink } from "../lib/email";

import { auth } from "../lib/lucia";
import { SqliteError } from "better-sqlite3";
import { generateEmailVerificationToken } from "../lib/token";

let emailInput = "";
let errorMessage = "";

// check for form submissions
if (Astro.request.method === "POST") {
	const formData = await Astro.request.formData();
	const email = formData.get("email");
	const password = formData.get("password");
	if (typeof email === "string") {
		emailInput = email;
	}
	// basic check
	const validPassword =
		typeof password === "string" &&
		password.length >= 6 &&
		password.length <= 255;
	if (isValidEmail(email) && validPassword) {
		try {
			const user = await auth.createUser({
				key: {
					providerId: "email", // auth method
					providerUserId: email.toLowerCase(), // unique id when using "email" auth method
					password // hashed by Lucia
				},
				attributes: {
					email,
					email_verified: Number(false)
				}
			});
			const session = await auth.createSession({
				userId: user.userId,
				attributes: {}
			});
			Astro.locals.auth.setSession(session); // set session cookie
			const token = await generateEmailVerificationToken(user.userId);
			await sendEmailVerificationLink(token);
			return Astro.redirect("/email-verification", 302);
		} catch (e) {
			// this part depends on the database you're using
			// check for unique constraint error in user table
			if (e instanceof SqliteError && e.code === "SQLITE_CONSTRAINT_UNIQUE") {
				errorMessage = "Account already exists";
				Astro.response.status = 400;
			} else {
				errorMessage = "An unknown error occurred";
				Astro.response.status = 500;
			}
		}
	} else {
		errorMessage = "Invalid input";
		Astro.response.status = 400;
	}
}

const session = await Astro.locals.auth.validate();
if (session) {
	if (!session.user.emailVerified) {
		return Astro.redirect("/email-verification");
	}
	return Astro.redirect("/");
}
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Email & password auth with Lucia</title>
	</head>
	<body>
		<h1>Sign up</h1>
		<form method="post">
			<label for="email">Email</label>
			<input name="email" id="email" value={emailInput} /><br />
			<label for="password">Password</label>
			<input type="password" name="password" id="password" /><br />
			<input type="submit" />
		</form>
		<p class="error">{errorMessage}</p>
		<a href="/login">Sign in</a>
	</body>
</html>
